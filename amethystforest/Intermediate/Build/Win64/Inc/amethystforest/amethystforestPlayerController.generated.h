// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

#ifdef AMETHYSTFOREST_amethystforestPlayerController_generated_h
#error "amethystforestPlayerController.generated.h already included, missing '#pragma once' in amethystforestPlayerController.h"
#endif
#define AMETHYSTFOREST_amethystforestPlayerController_generated_h

extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ClientEndOnlineGame;
extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ClientGameStarted;
extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ClientSetSpectatorCamera;
extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ClientStartOnlineGame;
extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ServerCheat;
extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ServerSay;
extern AMETHYSTFOREST_API FName AMETHYSTFOREST_ServerSuicide;
#define AamethystforestPlayerController_EVENTPARMS \
struct amethystforestPlayerController_eventClientSetSpectatorCamera_Parms \
{ \
	FVector CameraLocation; \
	FRotator CameraRotation; \
}; \
struct amethystforestPlayerController_eventServerCheat_Parms \
{ \
	FString Msg; \
}; \
struct amethystforestPlayerController_eventServerSay_Parms \
{ \
	FString Msg; \
};


#define AamethystforestPlayerController_RPC_WRAPPERS \
	DECLARE_FUNCTION(execSuicide) \
	{ \
		P_FINISH; \
		this->Suicide(); \
	} \
	DECLARE_FUNCTION(execSimulateInputKey) \
	{ \
		P_GET_STRUCT(struct FKey,Key); \
		P_GET_UBOOL(bPressed); \
		P_FINISH; \
		this->SimulateInputKey(Key,bPressed); \
	} \
	DECLARE_FUNCTION(execSetGodMode) \
	{ \
		P_GET_UBOOL(bEnable); \
		P_FINISH; \
		this->SetGodMode(bEnable); \
	} \
	bool ServerSuicide_Validate(); \
	virtual void ServerSuicide_Implementation(); \
 \
	DECLARE_FUNCTION(execServerSuicide) \
	{ \
		P_FINISH; \
		if (!this->ServerSuicide_Validate()) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSuicide_Validate")); \
			return; \
		} \
		this->ServerSuicide_Implementation(); \
	} \
	bool ServerSay_Validate(const FString& Msg); \
	virtual void ServerSay_Implementation(const FString& Msg); \
 \
	DECLARE_FUNCTION(execServerSay) \
	{ \
		P_GET_PROPERTY(UStrProperty,Msg); \
		P_FINISH; \
		if (!this->ServerSay_Validate(Msg)) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSay_Validate")); \
			return; \
		} \
		this->ServerSay_Implementation(Msg); \
	} \
	bool ServerCheat_Validate(const FString& Msg); \
	virtual void ServerCheat_Implementation(const FString& Msg); \
 \
	DECLARE_FUNCTION(execServerCheat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Msg); \
		P_FINISH; \
		if (!this->ServerCheat_Validate(Msg)) \
		{ \
			RPC_ValidateFailed(TEXT("ServerCheat_Validate")); \
			return; \
		} \
		this->ServerCheat_Implementation(Msg); \
	} \
	DECLARE_FUNCTION(execSay) \
	{ \
		P_GET_PROPERTY(UStrProperty,Msg); \
		P_FINISH; \
		this->Say(Msg); \
	} \
	virtual void ClientStartOnlineGame_Implementation(); \
 \
	DECLARE_FUNCTION(execClientStartOnlineGame) \
	{ \
		P_FINISH; \
		this->ClientStartOnlineGame_Implementation(); \
	} \
	virtual void ClientSetSpectatorCamera_Implementation(FVector CameraLocation, FRotator CameraRotation); \
 \
	DECLARE_FUNCTION(execClientSetSpectatorCamera) \
	{ \
		P_GET_STRUCT(FVector,CameraLocation); \
		P_GET_STRUCT(FRotator,CameraRotation); \
		P_FINISH; \
		this->ClientSetSpectatorCamera_Implementation(CameraLocation,CameraRotation); \
	} \
	virtual void ClientGameStarted_Implementation(); \
 \
	DECLARE_FUNCTION(execClientGameStarted) \
	{ \
		P_FINISH; \
		this->ClientGameStarted_Implementation(); \
	} \
	virtual void ClientEndOnlineGame_Implementation(); \
 \
	DECLARE_FUNCTION(execClientEndOnlineGame) \
	{ \
		P_FINISH; \
		this->ClientEndOnlineGame_Implementation(); \
	}


#define AamethystforestPlayerController_CALLBACK_WRAPPERS
#define AamethystforestPlayerController_INCLASS \
	private: \
	static void StaticRegisterNativesAamethystforestPlayerController(); \
	friend AMETHYSTFOREST_API class UClass* Z_Construct_UClass_AamethystforestPlayerController(); \
	public: \
	DECLARE_CLASS(AamethystforestPlayerController, APlayerController, COMPILED_IN_FLAGS(0 | CLASS_Config), 0, amethystforest, NO_API) \
	/** Standard constructor, called after all reflected properties have been initialized */    NO_API AamethystforestPlayerController(const class FPostConstructInitializeProperties& PCIP); \
	DECLARE_SERIALIZER(AamethystforestPlayerController) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual void GetLifetimeReplicatedProps( TArray< FLifetimeProperty > & OutLifetimeProps ) const override;


#undef UCLASS_CURRENT_FILE_NAME
#define UCLASS_CURRENT_FILE_NAME AamethystforestPlayerController


#undef UCLASS
#undef UINTERFACE
#define UCLASS(...) \
AamethystforestPlayerController_EVENTPARMS


#undef GENERATED_UCLASS_BODY
#undef GENERATED_IINTERFACE_BODY
#define GENERATED_UCLASS_BODY() \
public: \
	AamethystforestPlayerController_RPC_WRAPPERS \
	AamethystforestPlayerController_CALLBACK_WRAPPERS \
	AamethystforestPlayerController_INCLASS \
public:


